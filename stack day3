**************STACK OPERATIONS***********************

import java.util.Stack;

public class Stack1 {
    public static void main(String[] args) {
        Stack<String> animals= new Stack<>();

        animals.push("Dog");
        animals.push("Horse");
        animals.push("Lion");
        System.out.println("Stack: " + animals);
        
        String element = animals.pop();
        System.out.println("Removed Element: " + element);
    
        String element1 = animals.peek();
        System.out.println("Element at top: " + element1);
        
        int position = animals.search("Horse");
        System.out.println("Position of Horse: " + position);
        
        boolean result = animals.empty();
        System.out.println("Is the stack empty? " + result);
    
        

    }
}

**********************************************
public class StackUsingArray
{
    int size;
    int arr[];
    int top;
    
    public StackUsingArray(int size)
    {
        this.size=size;
        this.arr=new int[size];
        this.top=-1;
    }
    public boolean isFull()
    {
        return(size-1==top);
    }
    public boolean isEmpty()
    {
        return (top==-1);
    }
    public int Peek()
    {
        return arr[top];
    }
    public void push(int num)
    {
        if(isFull())
        {
            arr[++top]=num;
            System.out.println("Element pushed" + num);
        }
        else
        {
            System.out.println("Stack is full: Overflow");
        }
    }
    public int pop()
    {
        if(!isEmpty())
        {
            int val = arr[top];
            top--;
            System.out.println("Element poped" +val);
            return val;
        }
        else
        {
            System.out.println("Stack is empty: Underflow");
            return -1;
        }
    }

public static void main(String[] args)
{
    StackUsingArray=new stackUsingArray(3);
    stack.push(4);
    stack.push(3);
    stack.push(11);
    stack.push(5);
    
    stack.pop();
    stack.pop();
    
    System.out.println("Peek element is :"+ stack.top());
}
}    
    
